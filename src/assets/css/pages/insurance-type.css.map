{"version":3,"sources":["utils/_mixin.scss","utils/_breakpoint.scss","pages/insurance-type.css","utils/_grid.scss","pages/insurance-type.scss"],"names":[],"mappings":";;;CAWC,2BAAA;ACTD;;;;;;;;;;;;;;;;;;;;;;;;CAAA;AAsFC;EAEC,WAAA;EACA,YAAA;EACA,kBAAA;AC9DF;ADiEC;EACC,eAAA;AC/DF;ADiEE;EACC,WAAA;AC/DH;;ADcE;EDsHE;IGrKJ;MHsKM,aAAA;MACA,0BAAA;MACA,mBAAA;IE/HF;EACF;ECtCI;IACE,aAAA;EDwCN;ECtCI;IACE,gBAAA;EDwCN;AACF;ADFE;EDsHE;IGrKJ;MHsKM,aAAA;MACA,8BAAA;MACA,mBAAA;IEhHF;EACF;EC1CI;IACE,aAAA;ED4CN;EC1CI;IACE,gBAAA;ED4CN;AACF;ADjBE;EDsHE;IGrKJ;MHsKM,aAAA;MACA,8BAAA;MACA,mBAAA;IEjGF;EACF;EC9CI;IACE,aAAA;EDgDN;EC9CI;IACE,gBAAA;EDgDN;AACF;ADhCE;EDsHE;IGrKJ;MHsKM,aAAA;MACA,oCAAA;MACA,mBAAA;IElFF;EACF;EClDI;IACE,aAAA;EDoDN;EClDI;IACE,gBAAA;EDoDN;AACF;AD/CE;EDsHE;IGrKJ;MHsKM,aAAA;MACA,oCAAA;MACA,mBAAA;IEnEF;EACF;AACF;;AEpGA;EACI,qBAAA;EACA,kBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,kBAAA;EACA,yBAAA;AFuGJ;;AEpGA;EACI,gBAAA;EACA,cAAA;AFuGJ;;AEpGA;EACI,oCAAA;EACA,2CAAA;EACA,kBAAA;EACA,aAAA;AFuGJ;;AEnGA;EACI,8BAAA;EACA,2CAAA;EACA,kBAAA;EACA,aAAA;AFsGJ;;AElGA;EACI,oBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,eAAA;EACA,gBAAA;EACA,yBAAA;EACA,2BAAA;AFqGJ;AEnGI;EACI,iBAAA;AFqGR;;AEjGA;EACI,0BAAA;AFoGJ;;AEjGA;EACI,mBAAA;AFoGJ;;AEjGA;EACI,YAAA;EACA,0BAAA;AFoGJ;;AEjGA;EACI,YAAA;EACA,0BAAA;AFoGJ;;AEjGA;EACI,YAAA;EACA,0BAAA;AFoGJ;;AEjGA;EACI,mBAAA;AFoGJ;;AEjGA;EACI,0BAAA;EACA,eAAA;EACA,iBAAA;EACA,gBAAA;AFoGJ;;AEjGA;EACI,2BAAA;AFoGJ;;AEjGA;EACI,kDAAA;EACA,aAAA;AFoGJ;AElGI;EACI,YAAA;AFoGR;;AEhGA;EAEI;IACI,kBAAA;EFkGN;EE9FE;IACI,oBAAA;EFgGN;EE7FE;IACI,kBAAA;EF+FN;AACF;AE3FA;EACI;IACI,gBAAA;IACA,cAAA;EF6FN;AACF","file":"insurance-type.css","sourcesContent":["@mixin toRem($property, $value) {\r\n    #{$property}: calc($value / 16) + rem;\r\n}\r\n\r\n@mixin flexContainer($direction, $justify, $align) {\r\n    display: flex;\r\n    flex-direction: $direction;\r\n    justify-content: $justify;\r\n    align-items: $align;\r\n}\r\n\r\n /*flex cross browser mixin*/\r\n@mixin flexbox {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n}\r\n@mixin justify-content($value: flex-start) {\r\n    @if $value == flex-start {\r\n        -webkit-box-pack: start;\r\n        -moz-box-pack: start;\r\n        -ms-flex-pack: start;\r\n    } @else if $value == flex-end {\r\n        -webkit-box-pack: end;\r\n        -moz-box-pack: end;\r\n        -ms-flex-pack: end;\r\n    } @else if $value == space-between {\r\n        -webkit-box-pack: justify;\r\n        -moz-box-pack: justify;\r\n        -ms-flex-pack: justify;\r\n    } @else if $value == space-around {\r\n        -ms-flex-pack: distribute;\r\n    } @else {\r\n        -webkit-box-pack: $value;\r\n        -moz-box-pack: $value;\r\n        -ms-flex-pack: $value;\r\n    }\r\n    -webkit-justify-content: $value;\r\n    justify-content: $value;\r\n}\r\n@mixin align-items($value: stretch) {\r\n    @if $value == flex-start {\r\n        -webkit-box-align: start;\r\n        -moz-box-align: start;\r\n        -ms-flex-align: start;\r\n    } @else if $value == flex-end {\r\n        -webkit-box-align: end;\r\n        -moz-box-align: end;\r\n        -ms-flex-align: end;\r\n    } @else {\r\n        -webkit-box-align: $value;\r\n        -moz-box-align: $value;\r\n        -ms-flex-align: $value;\r\n    }\r\n    -webkit-align-items: $value;\r\n    align-items: $value;\r\n}\r\n@mixin flex-direction($value: row) {\r\n    @if $value == row-reverse {\r\n        -webkit-box-direction: reverse;\r\n        -webkit-box-orient: horizontal;\r\n        -moz-box-direction: reverse;\r\n        -moz-box-orient: horizontal;\r\n    } @else if $value == column {\r\n        -webkit-box-direction: normal;\r\n        -webkit-box-orient: vertical;\r\n        -moz-box-direction: normal;\r\n        -moz-box-orient: vertical;\r\n    } @else if $value == column-reverse {\r\n        -webkit-box-direction: reverse;\r\n        -webkit-box-orient: vertical;\r\n        -moz-box-direction: reverse;\r\n        -moz-box-orient: vertical;\r\n    } @else {\r\n        -webkit-box-direction: normal;\r\n        -webkit-box-orient: horizontal;\r\n        -moz-box-direction: normal;\r\n        -moz-box-orient: horizontal;\r\n    }\r\n    -webkit-flex-direction: $value;\r\n    -ms-flex-direction: $value;\r\n    flex-direction: $value;\r\n}\r\n@mixin flex-wrap($value: nowrap) {\r\n    // No Webkit/FF Box fallback.\r\n    -webkit-flex-wrap: $value;\r\n    @if $value == nowrap {\r\n        -ms-flex-wrap: none;\r\n    } @else {\r\n        -ms-flex-wrap: $value;\r\n    }\r\n    flex-wrap: $value;\r\n}\r\n\r\n@mixin transform($property) {\r\n    -webkit-transform: $property;\r\n    -ms-transform: $property;\r\n    transform: $property;\r\n}\r\n\r\n@mixin border-radius($radius) {\r\n    -webkit-border-radius: $radius;\r\n    -moz-border-radius: $radius;\r\n    -ms-border-radius: $radius;\r\n    -o-border-radius: $radius;\r\n    border-radius: $radius;\r\n}\r\n\r\n@mixin border-box{\r\n\t-moz-box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n@mixin transition($transition) {\r\n    -webkit-transition: $transition;\r\n    -moz-transition: $transition;\r\n    -o-transition: $transition;\r\n    transition: $transition;\r\n}\r\n\r\n@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white,  0%)) {\r\n    // For Google Chrome\r\n    &::-webkit-scrollbar {\r\n      width:  $size;\r\n      height: $size;\r\n    }\r\n  \r\n    &::-webkit-scrollbar-thumb {\r\n      background: $foreground-color;\r\n    }\r\n  \r\n    &::-webkit-scrollbar-track {\r\n      background: $background-color;\r\n    }\r\n  \r\n    // For Internet Explorer\r\n    & {\r\n      scrollbar-face-color: $foreground-color;\r\n      scrollbar-track-color: $background-color;\r\n    }\r\n}\r\n\r\n@mixin close-icon{\r\n    svg {  \r\n      .center{\r\n        opacity: 0;\r\n        transform: scale(0);\r\n      }\r\n      .top {\r\n        transform: rotate(45deg);\r\n      }\r\n      .bottom {\r\n        transform: rotate(-45deg);\r\n      }\r\n    } \r\n}\r\n\r\n@mixin box-shadow($params) {\r\n    -webkit-box-shadow: $params;\r\n    -moz-box-shadow: $params;\r\n    box-shadow: $params;\r\n}\r\n\r\n\r\n@mixin grid($grid-type, $args, $row-gap, $column-gap: $row-gap) {\r\n    @supports (display: grid) {\r\n      display: grid;\r\n      #{$grid-type}: #{$args};\r\n      grid-gap: ($row-gap) ($column-gap);\r\n    }\r\n}","// MEDIA QUERY MANAGER\r\n\r\n/*\r\n0px - 360px:\t\tXS Phone\r\n360px - 576px: \t\tPhone\r\n576px - 768px: \t\tTablet Portrait\r\n768px - 992px:\t\tTablet Landscape\r\n992px - 1200px: \tdesktop\r\n1200px - 1920px:\tnormal Media queries\r\n1920px and up:  \tFull HD\r\n\r\n\r\n// 1em = 16px\r\n\r\n\t 359   =  \t22.438em\t\r\n\t 576   =  \t36em\r\n\t 768   =\t48em\r\n\t 992   =\t62em\r\n\t 1200  =\t75em\r\n\t 1366  =\t85.375em\r\n\t 1400  =\t87.5em\r\n\t 1537  =\t96.063em\r\n\t 1560  =\t97.5em\r\n\t 1600  =\t100em\r\n\t 1680  =\t105em\r\n\t 1920  =\t120em\r\n*/\r\n\r\n\r\n$breakpoints: (xs: 412px,\r\n\tsm: 576px,\r\n\tmsm: 640px,\r\n\tmd: 768px,\r\n\tlg: 992px,\r\n\txl: 1200px,\r\n\txxl: 1400px) !default;\r\n\r\n\r\n$breakpoint: map-get($breakpoints, xs);\r\n\r\n\r\n@mixin respond-above($breakpoint) {\r\n\r\n\t// If the breakpoint exists in the map.\r\n\t@if map-has-key($breakpoints, $breakpoint) {\r\n\r\n\t\t// Get the breakpoint value.\r\n\t\t$breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n\t\t// Write the media query.\r\n\t\t@media (min-width: $breakpoint-value) {\r\n\t\t\t@content;\r\n\t\t}\r\n\r\n\t\t// If the breakpoint doesn't exist in the map.\r\n\t}\r\n\r\n\t@else {\r\n\r\n\t\t// Log a warning.\r\n\t\t@warn 'Invalid breakpoint: #{$breakpoint}.';\r\n\t}\r\n}\r\n\r\n@mixin until-width($breakpoint) {\r\n\r\n\t// If the breakpoint exists in the map.\r\n\t@if map-has-key($breakpoints, $breakpoint) {\r\n\r\n\t\t// Get the breakpoint value.\r\n\t\t$breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n\t\t// Write the media query.\r\n\t\t@media (max-width: $breakpoint-value) {\r\n\t\t\t@content;\r\n\t\t}\r\n\r\n\t\t// If the breakpoint doesn't exist in the map.\r\n\t}\r\n\r\n\t@else {\r\n\r\n\t\t// Log a warning.\r\n\t\t@warn 'Invalid breakpoint: #{$breakpoint}.';\r\n\t}\r\n}\r\n\r\n.navbar {\r\n\t.navbar-toggler-icon {\r\n\r\n\t\twidth: auto;\r\n\t\theight: auto;\r\n\t\tmargin-right: 30px;\r\n\t}\r\n\r\n\t.navbar-brand {\r\n\t\tmax-width: 70px;\r\n\r\n\t\timg {\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t}\r\n\r\n}","/*flex cross browser mixin*/\n/*\n0px - 360px:\t\tXS Phone\n360px - 576px: \t\tPhone\n576px - 768px: \t\tTablet Portrait\n768px - 992px:\t\tTablet Landscape\n992px - 1200px: \tdesktop\n1200px - 1920px:\tnormal Media queries\n1920px and up:  \tFull HD\n\n\n// 1em = 16px\n\n\t 359   =  \t22.438em\t\n\t 576   =  \t36em\n\t 768   =\t48em\n\t 992   =\t62em\n\t 1200  =\t75em\n\t 1366  =\t85.375em\n\t 1400  =\t87.5em\n\t 1537  =\t96.063em\n\t 1560  =\t97.5em\n\t 1600  =\t100em\n\t 1680  =\t105em\n\t 1920  =\t120em\n*/\n.navbar .navbar-toggler-icon {\n  width: auto;\n  height: auto;\n  margin-right: 30px;\n}\n.navbar .navbar-brand {\n  max-width: 70px;\n}\n.navbar .navbar-brand img {\n  width: 100%;\n}\n\n@media (min-width: 412px) {\n  @supports (display: grid) {\n    .grid {\n      display: grid;\n      grid-template-columns: 1fr;\n      grid-gap: 15px 15px;\n    }\n  }\n  .grid__items.grid1 {\n    grid-row: 4/4;\n  }\n  .grid__items.grid2 {\n    grid-column: 1/1;\n  }\n}\n@media (min-width: 576px) {\n  @supports (display: grid) {\n    .grid {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-gap: 15px 15px;\n    }\n  }\n  .grid__items.grid1 {\n    grid-row: 2/4;\n  }\n  .grid__items.grid2 {\n    grid-column: 1/3;\n  }\n}\n@media (min-width: 768px) {\n  @supports (display: grid) {\n    .grid {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-gap: 15px 15px;\n    }\n  }\n  .grid__items.grid1 {\n    grid-row: 1/4;\n  }\n  .grid__items.grid2 {\n    grid-column: 2/3;\n  }\n}\n@media (min-width: 992px) {\n  @supports (display: grid) {\n    .grid {\n      display: grid;\n      grid-template-columns: 320px 1fr 1fr;\n      grid-gap: 15px 15px;\n    }\n  }\n  .grid__items.grid1 {\n    grid-row: 1/3;\n  }\n  .grid__items.grid2 {\n    grid-column: 2/4;\n  }\n}\n@media (min-width: 1200px) {\n  @supports (display: grid) {\n    .grid {\n      display: grid;\n      grid-template-columns: 380px 1fr 1fr;\n      grid-gap: 30px 30px;\n    }\n  }\n}\n\n.resend-text {\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n  text-align: center;\n  color: var(--color-title);\n}\n\n.contain-wrapper-sm {\n  max-width: 660px;\n  margin: 0 auto;\n}\n\n.blue-light-box {\n  background: var(--color-blue-light2);\n  border: 1px solid var(--color-border-light);\n  border-radius: 8px;\n  padding: 15px;\n}\n\n.white-box {\n  background: var(--color-white);\n  border: 1px solid var(--color-border-light);\n  border-radius: 8px;\n  padding: 15px;\n}\n\n.btn-add {\n  display: flex;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: var(--color-primary);\n}\n.btn-add .icon {\n  margin-right: 7px;\n}\n\n.max-width-100 {\n  max-width: 100% !important;\n}\n\n.summary-block {\n  margin-bottom: 35px;\n}\n\n.width-400px {\n  width: 400px;\n  max-width: 100% !important;\n}\n\n.width-300px {\n  width: 300px;\n  max-width: 100% !important;\n}\n\n.width-450px {\n  width: 450px;\n  max-width: 100% !important;\n}\n\n.mb-12px {\n  margin-bottom: 12px;\n}\n\n.note {\n  color: var(--color-sucess);\n  font-size: 14px;\n  line-height: 22px;\n  margin-bottom: 0;\n}\n\n.fw-500 {\n  font-weight: 500 !important;\n}\n\n.car-block {\n  border-bottom: 1px solid var(--color-border-light);\n  padding: 16px;\n}\n.car-block:last-of-type {\n  border: none;\n}\n\n@media only screen and (max-width: 575px) {\n  .white-box {\n    padding: 15px 10px;\n  }\n  .upload-boxx {\n    margin: 0 !important;\n  }\n  .progress-round.progress-vs {\n    position: relative;\n  }\n}\n@media only screen and (min-width: 1400px) {\n  .contain-wrapper-sm {\n    max-width: 690px;\n    margin: 0 auto;\n  }\n}","@use \"mixin\" as *;\r\n@use \"variable\" as *;\r\n@use \"breakpoint\" as *;\r\n.grid {\r\n  @include respond-above(xs) {\r\n    @include grid(\"grid-template-columns\", 1fr, 15px, 15px);\r\n    &__items {\r\n      &.grid1 {\r\n        grid-row: 4/4;\r\n      }\r\n      &.grid2 {\r\n        grid-column: 1/1;\r\n      }\r\n    }\r\n  }\r\n  @include respond-above(sm) {\r\n    @include grid(\"grid-template-columns\", 1fr 1fr, 15px, 15px);\r\n    &__items {\r\n      &.grid1 {\r\n        grid-row: 2/4;\r\n      }\r\n      &.grid2 {\r\n        grid-column: 1/3;\r\n      }\r\n    }\r\n  }\r\n  @include respond-above(md) {\r\n    @include grid(\"grid-template-columns\", 1fr 1fr, 15px, 15px);\r\n    &__items {\r\n      &.grid1 {\r\n        grid-row: 1/4;\r\n      }\r\n      &.grid2 {\r\n        grid-column: 2/3;\r\n      }\r\n    }\r\n  }\r\n  @include respond-above(lg) {\r\n    @include grid(\"grid-template-columns\", 320px 1fr 1fr, 15px, 15px);\r\n    &__items {\r\n      &.grid1 {\r\n        grid-row: 1/3;\r\n      }\r\n      &.grid2 {\r\n        grid-column: 2/4;\r\n      }\r\n    }\r\n  }\r\n  @include respond-above(xl) {\r\n    @include grid(\"grid-template-columns\", 380px 1fr 1fr, 30px, 30px);\r\n  }\r\n}\r\n","@use \"../utils/\"as *;\r\n\r\n\r\n\r\n\r\n\r\n.resend-text {\r\n    font-family: 'Roboto';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n    text-align: center;\r\n    color: var(--color-title);\r\n}\r\n\r\n.contain-wrapper-sm {\r\n    max-width: 660px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.blue-light-box {\r\n    background: var(--color-blue-light2);\r\n    border: 1px solid var(--color-border-light);\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    // overflow: hidden;\r\n}\r\n\r\n.white-box {\r\n    background: var(--color-white);\r\n    border: 1px solid var(--color-border-light);\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    // overflow: hidden;\r\n}\r\n\r\n.btn-add {\r\n    display: flex;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    color: var(--color-primary);\r\n\r\n    .icon {\r\n        margin-right: 7px;\r\n    }\r\n}\r\n\r\n.max-width-100 {\r\n    max-width: 100% !important;\r\n}\r\n\r\n.summary-block {\r\n    margin-bottom: 35px;\r\n}\r\n\r\n.width-400px {\r\n    width: 400px;\r\n    max-width: 100% !important;\r\n}\r\n\r\n.width-300px {\r\n    width: 300px;\r\n    max-width: 100% !important;\r\n}\r\n\r\n.width-450px {\r\n    width: 450px;\r\n    max-width: 100% !important;\r\n}\r\n\r\n.mb-12px {\r\n    margin-bottom: 12px;\r\n}\r\n\r\n.note {\r\n    color: var(--color-sucess);\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.fw-500 {\r\n    font-weight: 500 !important;\r\n}\r\n\r\n.car-block {\r\n    border-bottom: 1px solid var(--color-border-light);\r\n    padding: 16px;\r\n\r\n    &:last-of-type {\r\n        border: none\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 575px) {\r\n\r\n    .white-box {\r\n        padding: 15px 10px;\r\n\r\n    }\r\n\r\n    .upload-boxx {\r\n        margin: 0 !important;\r\n    }\r\n\r\n    .progress-round.progress-vs {\r\n        position: relative;\r\n    }\r\n\r\n}\r\n\r\n@media only screen and (min-width: 1400px) {\r\n    .contain-wrapper-sm {\r\n        max-width: 690px;\r\n        margin: 0 auto;\r\n    }\r\n}"]}